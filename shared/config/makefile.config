#
# Copyright (C) 2012-2018 Jan Fiedor <fiedorjan@centrum.cz>
#
# This file is part of ANaConDA.
#
# ANaConDA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# ANaConDA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ANaConDA. If not, see <http://www.gnu.org/licenses/>.
#

#
# Main configuration file for all parts of ANaConDA.
#
# Contains definitions of variables necessary to build the ANaConDA framework,
#   its wrappers and analysers.
#
# File:      makefile.config
# Author:    Jan Fiedor (fiedorjan@centrum.cz)
# Date:      Created 2012-02-21
# Date:      Last Update 2019-02-01
# Version:   0.7
#

# Basic variables
# ---------------

# Are we building a debug version? If yes, set DEBUG=1 before configuring PIN!
ifeq ($(findstring debug, $(MAKECMDGOALS)), debug)
  DEBUG=1
endif

# PIN variables
# -------------

# A root directory where the PIN framework is installed
PIN_ROOT ?= $(PIN_HOME)

# A directory containing PIN configuration files 
ifdef PIN_ROOT
  CONFIG_ROOT := $(PIN_ROOT)/source/tools/Config
else
  CONFIG_ROOT := ../Config
endif

# Include the variables necessary to build with PIN
include $(CONFIG_ROOT)/makefile.config

# ANaConDA variables
# ------------------

# Directory in which to built the target
BUILD_DIR = ./build
# Directory to which to install the target
INSTALL_DIR = ./local

# The CMake executable to be used to perform the build
CMAKE ?= cmake

# Directory containing the source code of the target
ifeq ($(shell uname -o),Cygwin)
  # A Windows version of CMake needs Windows-compatible paths
  CMAKE_SOURCE_DIR = $(shell cygpath --mixed $(abspath .))
else
  CMAKE_SOURCE_DIR = $(abspath .)
endif

# Use the GCC 4.x ABI if using the GCC 5.x or newer compiler
ifeq ($(shell uname -s),Linux)
  ifeq ($(shell expr `gcc -dumpversion | cut -f1 -d.` \>= 5),1)
    TOOL_CXXFLAGS += -fabi-version=2
  endif
endif

# Some information set by the PIN's Makefiles must be passed to CMake
CMAKE_PIN_FLAGS  = -DTARGET_LONG="$(HOST_ARCH)"
CMAKE_PIN_FLAGS += -DCXX="$(CXX)"
CMAKE_PIN_FLAGS += -DPIN_CXXFLAGS="$(TOOL_CXXFLAGS)"
CMAKE_PIN_FLAGS += -DPIN_LDFLAGS="$(TOOL_LDFLAGS)"
CMAKE_PIN_FLAGS += -DPIN_LPATHS="$(TOOL_LPATHS)"
CMAKE_PIN_FLAGS += -DPIN_LIBS="$(TOOL_LIBS)"

# General CMake parameters used in all types of build (debug, release, etc.)
CMAKE_FLAGS = -DCMAKE_INSTALL_PREFIX="$(abspath $(INSTALL_DIR))"
# Directory to which the header files will be installed (if specified)
ifdef INSTALL_INCLUDEDIR
  CMAKE_FLAGS += -DCMAKE_INSTALL_INCLUDEDIR="$(INSTALL_INCLUDEDIR)"
endif
# Directory to which the library files will be installed (if specified)
ifdef INSTALL_LIBDIR
  CMAKE_FLAGS += -DCMAKE_INSTALL_LIBDIR="$(INSTALL_LIBDIR)"
endif
# Pass the PIN-related information to CMake
CMAKE_FLAGS += $(CMAKE_PIN_FLAGS)
# Generate Unix Makefiles when building on Windows using Cygwin
ifeq ($(shell uname -o),Cygwin)
  CMAKE_FLAGS += -G"Unix Makefiles"
endif

# End of file makefile.config
