#
# Debugging Information Extraction Library General Makefile
#
# File:      Makefile
# Author:    Jan Fiedor (fiedorjan@centrum.cz)
# Date:      Created 2012-02-18
# Date:      Last Update 2019-01-30
# Version:   0.6.1
#

# Directory in which to built the library
BUILD_DIR = ./build
# Directory to which to install the library
INSTALL_DIR = ./local

# The CMake executable to be used to perform the build
CMAKE ?= cmake

# Directory containing the source code of the library
ifeq ($(shell uname -o),Cygwin)
  # A Windows version of CMake needs Windows-compatible paths
  CMAKE_SOURCE_DIR = $(shell cygpath --mixed $(abspath .))
else
  CMAKE_SOURCE_DIR = $(abspath .)
endif

# General CMake parameters used in all types of build (debug, release, etc.)
CMAKE_FLAGS = -DCMAKE_INSTALL_PREFIX="$(abspath $(INSTALL_DIR))"
# Directory to which the header files will be installed (if specified)
ifdef INSTALL_INCLUDEDIR
  CMAKE_FLAGS += -DCMAKE_INSTALL_INCLUDEDIR="$(INSTALL_INCLUDEDIR)"
endif
# Directory to which the library files will be installed (if specified)
ifdef INSTALL_LIBDIR
  CMAKE_FLAGS += -DCMAKE_INSTALL_LIBDIR="$(INSTALL_LIBDIR)"
endif
# Target architecture for which the library will be built (if defined)
ifdef HOST_ARCH
  CMAKE_FLAGS += -DTARGET_LONG=$(HOST_ARCH)
endif
# Additional CMake parameters used when building on Windows using Cygwin
ifeq ($(shell uname -o),Cygwin)
  # Generate Unix Makefiles and use Microsoft C/C++ Optimizing Compiler
  CMAKE_FLAGS += -G"Unix Makefiles" -DCMAKE_CXX_COMPILER=cl
endif

# Builds a release version of the library
all: release

# Builds a debug version of the library
debug:
	mkdir -p $(BUILD_DIR)
	cd $(BUILD_DIR) && $(CMAKE) $(CMAKE_FLAGS) -DDEBUG=1 $(CMAKE_SOURCE_DIR)
	$(MAKE) -C $(BUILD_DIR)

# Builds a release version of the library
release:
	mkdir -p $(BUILD_DIR)
	cd $(BUILD_DIR) && $(CMAKE) $(CMAKE_FLAGS) -DRELEASE=1 $(CMAKE_SOURCE_DIR)
	$(MAKE) -C $(BUILD_DIR)

# Installs the library
install:
ifneq ("$(wildcard $(BUILD_DIR)/Makefile)", "")
	$(MAKE) -C $(BUILD_DIR) install
endif

# Uninstalls the library
uninstall:
ifneq ("$(wildcard $(BUILD_DIR)/install_manifest.txt)", "")
	@$(CMAKE) -E cmake_echo_color --cyan "Uninstall the project..."
	@for file in `cat $(BUILD_DIR)/install_manifest.txt | sed -e "s/\r//"`; do \
	  echo "-- Uninstalling: $$file"; \
	  rm -f $$file; \
	  if test -d `dirname $$file`; then \
	    rmdir -p --ignore-fail-on-non-empty `dirname $$file`; \
	  fi; \
	done
	@rm -f $(BUILD_DIR)/install_manifest.txt
endif

# Generates a source archive of the library
dist: LIBDIE_VERSION := $(shell cat src/version.h | grep LIBDIE_RELEASE | \
  sed 's/#define LIBDIE_RELEASE ["]\([0-9.]*\)["][\r]$$/\1/')
dist: LIBDIE_PREFIX := libdie-$(LIBDIE_VERSION)-$(shell git rev-parse --short \
  HEAD)
dist:
	git archive --format=tar.gz --prefix=$(LIBDIE_PREFIX)/ HEAD \
	  > $(LIBDIE_PREFIX)-src.tar.gz

# Deletes all files created by Makefiles generated by CMake
clean:
ifneq ("$(wildcard $(BUILD_DIR)/Makefile)", "")
	$(MAKE) -C $(BUILD_DIR) clean
endif

# Deletes all files created by both CMake and Makefiles generated by it
distclean: clean
ifneq ("$(wildcard $(BUILD_DIR))", "")
	rm -rf $(BUILD_DIR)/CMakeFiles $(BUILD_DIR)/CMakeCache.txt \
	  $(BUILD_DIR)/Makefile $(BUILD_DIR)/cmake_install.cmake \
	  $(BUILD_DIR)/install_manifest.txt
	rmdir -p --ignore-fail-on-non-empty $(abspath $(BUILD_DIR))
endif

# End of file Makefile
